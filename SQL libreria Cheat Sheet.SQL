
SQL Libreria Master!
-- =====================================
-- ðŸ“˜ SQL FUNCTIONS CHEATSHEET
-- =====================================

-- ðŸ”¹ AGGREGATE FUNCTIONS
-- Estas se usan con GROUP BY para resumir datos

SELECT 
    COUNT(*) AS total_filas,         -- Cuenta el total de filas
    SUM(salary) AS total_sueldos,    -- Suma total de un campo numÃ©rico
    AVG(age) AS edad_promedio,       -- Calcula el promedio
    MIN(age) AS edad_menor,          -- Valor mÃ­nimo
    MAX(age) AS edad_mayor           -- Valor mÃ¡ximo
FROM empleados;

-- ðŸ”¹ STRING FUNCTIONS
-- Manipulan texto o cadenas (strings)

SELECT 
    UPPER(nombre) AS mayuscula,      -- Convierte a mayÃºsculas
    LOWER(nombre) AS minuscula,      -- Convierte a minÃºsculas
    LENGTH(nombre) AS largo,         -- Cuenta caracteres
    TRIM(nombre) AS limpio,          -- Elimina espacios al principio/final
    SUBSTRING(nombre, 1, 3) AS abreviatura -- Extrae parte del string
FROM empleados;

-- ðŸ”¹ DATE FUNCTIONS
-- Trabajan con fechas

SELECT 
    CURRENT_DATE AS hoy,              -- Fecha de hoy
    CURRENT_TIMESTAMP AS fecha_hora,  -- Fecha y hora actual
    EXTRACT(YEAR FROM fecha_nac) AS aÃ±o, -- Extrae aÃ±o de una fecha
    DATE_PART('month', fecha_nac) AS mes  -- Extrae mes
FROM empleados;

-- ðŸ”¹ MATH FUNCTIONS
-- Operaciones matemÃ¡ticas bÃ¡sicas

SELECT 
    ROUND(sueldo, 2) AS sueldo_redondeado,  -- Redondea con 2 decimales
    CEIL(sueldo) AS techo,                  -- Redondea hacia arriba
    FLOOR(sueldo) AS piso,                  -- Redondea hacia abajo
    ABS(balance) AS valor_absoluto          -- Convierte negativo a positivo
FROM finanzas;

-- ðŸ”¹ CONDITIONAL FUNCTION
-- Devuelve valores basados en una condiciÃ³n

SELECT 
    nombre,
    CASE 
        WHEN edad < 18 THEN 'Menor'
        WHEN edad BETWEEN 18 AND 64 THEN 'Adulto'
        ELSE 'Senior'
    END AS categoria_edad
FROM empleados;

-- ðŸ”¹ NULL FUNCTIONS
-- Trabajan con valores nulos

SELECT 
    COALESCE(correo, 'No disponible') AS correo_seguro, -- Devuelve valor alterno si es NULL
    NULLIF(departamento, '') AS depto_valido            -- Devuelve NULL si ambos son iguales
FROM empleados;

-- ðŸ”¹ CONVERSION FUNCTIONS
-- Convierten tipos de datos

SELECT 
    CAST(sueldo AS VARCHAR) AS sueldo_texto,
    CONVERT(DATE, fecha_hora) AS solo_fecha
FROM pagos;

-- ðŸ”¹ BONUS: FILTRADO Y AGRUPACIÃ“N

-- WHERE: filtra antes de agrupar
-- HAVING: filtra despuÃ©s de agrupar

SELECT departamento, COUNT(*) AS total
FROM empleados
WHERE activo = true
GROUP BY departamento
HAVING COUNT(*) > 5;


